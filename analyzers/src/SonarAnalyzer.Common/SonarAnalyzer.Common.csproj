<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>SonarAnalyzer</AssemblyName>
    <RootNamespace>SonarAnalyzer</RootNamespace>
    <!--
      We need to target "net46;netstandard2.0" for:
      - local builds to properly generate packages.lock.json
      - CI restore due to a NuGet bug https://github.com/NuGet/Home/issues/12010
      We need to target "net46" for:
      - CI build to speed up the pipeline. We do not use netstandard2.0 binaries anywhere.
      We should be able to remove netstandard2.0 and this complication from project files and azure-pipelines.yml once NuGet issue is fixed.
    -->
    <TargetFrameworks Condition="$(BuildOnlyNet46) != 'true'">net46;netstandard2.0</TargetFrameworks>
    <TargetFrameworks Condition="$(BuildOnlyNet46) == 'true'">net46</TargetFrameworks>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Google.Protobuf" Version="3.15.0" />
    <!-- When changing this reference update ProtocExe property too! -->
    <PackageReference Include="Google.Protobuf.Tools" Version="3.6.1" />
    <PackageReference Include="Microsoft.Composition" Version="1.0.27">
      <!-- This package is a dependency of Microsoft.CodeAnalysis.CSharp.Workspaces. It is safe to use since it's compatible with .Net Portable runtime -->
      <NoWarn>NU1701</NoWarn>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.Common" Version="1.3.2" />
    <PackageReference Include="System.Collections.Immutable" Version="1.1.37">
      <!-- Downgrade System.Collections.Immutable to support VS2015 Update 3 -->
      <NoWarn>NU1605, NU1701</NoWarn>
    </PackageReference>
    <!--  Manually upgrade since the version transitively linked (4.0.1) is marked as vulnerable by Mend. -->
    <PackageReference Include="System.Text.RegularExpressions" Version="4.3.1" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Protobuf\AnalyzerReport.cs" />
    <Compile Include="Protobuf\AnalyzerReport.cs">
      <SonarQubeExclude>true</SonarQubeExclude>
    </Compile>
    <Compile Include="..\Signing.cs" Link="Properties\Signing.cs" />
  </ItemGroup>

  <ItemGroup>
    <!-- We need to update NuGet and JAR packaging after changing references -->
    <ProjectReference Include="..\SonarAnalyzer.CFG\SonarAnalyzer.CFG.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="SonarAnalyzer.Common" />
    <Using Include="SonarAnalyzer.Extensions" />
    <Using Include="SonarAnalyzer.Helpers" />
    <Using Include="StyleCop.Analyzers.Lightup" />
  </ItemGroup>

  <!-- Generate protobuf classes, supports windows and linux execution -->
  <Target Name="GenerateProtobufClasses" BeforeTargets="CoreCompile" Outputs="./Protobuf/AnalyzerReport.cs" Inputs="./Protobuf/AnalyzerReport.proto">
    <Message Importance="high" Text="Generating protobuf classes..." />
    <!-- There is no built-in way to distinguish between Linux and OSX -->
    <PropertyGroup>
      <IsWindows Condition="'$(OS)'=='Windows_NT'">true</IsWindows>
      <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
      <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
    </PropertyGroup>
    <PropertyGroup>
      <ProtocCompiler Condition="$(IsWindows)==true">"$(NugetPackageRoot)/Google.Protobuf.Tools/3.6.1/tools/windows_x64/protoc.exe"</ProtocCompiler>
      <ProtocCompiler Condition="$(IsOSX)==true">$(NugetPackageRoot)/google.protobuf.tools/3.6.1/tools/macosx_x64/protoc</ProtocCompiler>
      <ProtocCompiler Condition="$(IsLinux)==true">$(NugetPackageRoot)/google.protobuf.tools/3.6.1/tools/linux_x64/protoc</ProtocCompiler>
    </PropertyGroup>
    <Exec Command="$(ProtocCompiler) -I=./Protobuf --csharp_out=./Protobuf ./Protobuf/AnalyzerReport.proto" />
    <Message Importance="high" Text="Protobuf classes generated." />
  </Target>

</Project>
